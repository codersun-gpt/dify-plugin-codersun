identity:
  name: html_md_api
  author: CoderSun
  label:
    en_US: Convert document to markdown format
    zh_Hans: 将文档转换为markdown格式
description:
  human:
    en_US: A tool to convert Confluence document content to markdown format by providing pageId
    zh_Hans: 传入pageId,通过confluence api将文档内容转换为markdown的工具
  llm: 传入pageId,通过confluence api将文档内容转换为markdown的工具
extra:
  python:
    source: tools/html_md.py
parameters: # 参数列表
  - name: pageId # 参数名称
    type: number # 参数类型
    required: true # 是否必填
    label: # 参数标签
      en_US: Page ID
      zh_Hans: 页面ID
    human_description: # 用于前端展示的介绍，支持多语言
      en_US: Please enter the page ID, which can be obtained from the document's URI # 英文占位符
      zh_Hans: 请输入你的pageId，可以通过文档的uri地址获取 # 中文占位符
    llm_description: 传入pageId,通过confluence api将文档内容转换为markdown的工具
    form: llm # 表单类型，llm表示这个参数需要由Agent自行推理出来，前端将不会展示这个参数
  - name: result_type # 参数名称
    type: select # 参数类型
    required: true # 是否必填
    default: json
    options: # 选项列表
      - value: file # 选项值
        label: # 选项标签
          en_US: File # 英文标签
      - value: text # 选项值
        label: # 选项标签
          en_US: Text # 英文标签
    label:
      en_US: Result Type
      zh_Hans: 结果类型
      ja_JP: 結果タイプ
      pt_BR: tipo de resultado
    human_description: # 用于前端展示的介绍，支持多语言
      en_US: File for file output; Text for text output # 英文占位符
      zh_Hans: file 表示输出为文件；text 为输出文本
    form: form 
  - name: add_level_mark
    type: boolean
    required: true
    default: true
    label:
      en_US: Add Level Mark
      zh_Hans: 辅助分段(L_x)
    human_description:
      en_US: Whether to add L_xxx level marks in headers. Level marks help with segmentation. For example - Level 2 header [## L_2] and Level 3 header [### L_3] for segmentation
      zh_Hans: 是否在标题中添加L_xxx层级标记，层级标记可以帮助分段. 例如：二级标题[## L_2]进行分段 三级标题 [### L_3]进行分段
    llm_description: 控制是否在Markdown标题中添加L_1、L_2等层级标记。
    form: form
